{% extends "base.html" %}

{% block content %}
<div class="content-wrapper">
    <h1 class="display-4 mb-5 text-center">Public Domain Book Processor</h1>
    
    <div class="upload-section mb-5">
        <form id="upload-form" class="p-4 border rounded">
            <div class="mb-4">
                <label for="pdf-file" class="form-label h5">Upload PDF Book</label>
                <input type="file" class="form-control" id="pdf-file" name="file" accept=".pdf" required>
                <small class="text-muted">Upload a public domain book in PDF format</small>
            </div>
            
            <div class="text-center">
                <button type="submit" class="btn btn-primary btn-lg">Process Book</button>
            </div>
        </form>
        
        <div id="processing-status" class="mt-3 text-center d-none">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Processing...</span>
            </div>
            <p class="mt-2">Processing your PDF book...</p>
        </div>
    </div>
</div>
{% endblock %}

{% block scripts %}
<script>
document.addEventListener('DOMContentLoaded', () => {
    const uploadForm = document.getElementById('upload-form');
    const processingStatus = document.getElementById('processing-status');
    
    uploadForm?.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = new FormData(uploadForm);
        processingStatus.classList.remove('d-none');
        
        try {
            const response = await fetch('/pdf/upload', {
                method: 'POST',
                body: formData
            });
            
            const data = await response.json();
            
            if (!response.ok) {
                throw new Error(data.error || 'Failed to process PDF');
            }
            
            if (data.success && data.redirect) {
                window.location.href = data.redirect;
            }
            
        } catch (error) {
            console.error('Error:', error);
            alert('Error: ' + (error.message || 'Failed to process PDF'));
        } finally {
            processingStatus.classList.add('d-none');
        }
    });
});
</script>
{% endblock %}